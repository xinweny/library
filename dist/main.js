(()=>{var n={426:(n,t,e)=>{"use strict";e.d(t,{Z:()=>p});var o=e(537),r=e.n(o),i=e(645),a=e.n(i),s=e(667),A=e.n(s),d=new URL(e(581),e.b),c=a()(r()),l=A()(d);c.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  color: white;\n  text-decoration: none;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nbody {\n  background-image: url("+l+");\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\n}\n\n.bottom-layer {\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\n.header {\n  padding: 24px;\n  background-color: rgba(0, 0, 0, 0.5);\n  font-family: 'Courier New', Courier, monospace;\n  letter-spacing: 2px;\n  font-size: 1.5rem;\n}\n\n.content {\n  height: 100%;\n  padding: 24px;\n}\n\n#add-book-btn {\n  background-color: transparent;\n  padding: 8px 16px;\n  border: 1px white solid;\n  margin-bottom: 24px;\n  font-size: 1rem;\n  transition: background-color 1s, color 1s;\n}\n\n#add-book-btn:hover {\n  background-color: white;\n  color: black;\n}\n\n.card-container {\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 48px;\n  width: auto;\n}\n\n.book-card {\n  width: 250px;\n  height: 250px;\n  padding: 16px 32px 16px 16px;\n  border: 4px double white;\n  background: rgba(0, 0, 0, 0.5);\n  position: relative;\n}\n\n.book-card p:first-of-type {\n  font-weight: bold;\n  font-size: 1.25rem;\n  margin-bottom: 16px;\n}\n\n.book-card p:nth-child(2), .book-card p:nth-child(3) {\n  font-style: italic;\n  text-align: right;\n}\n\n.book-card button:first-of-type {\n  width: 75px;\n  padding: 4px 8px;\n  border: 1px solid white;\n  border-radius: 16px;\n  background-color: transparent;\n  margin-top: 16px;\n  display: block;\n  position: absolute;\n  bottom: 16px;\n  left: 16px;\n}\n\n.book-card button:first-of-type.read {\n  background-color: white;\n  color: black;\n}\n\n.book-card button:last-child {\n  display: block;\n  font-weight: bold;\n  background-color: transparent;\n  font-size: 1.25rem;\n  border: none;\n  position: absolute;\n  right: 8px;\n  top: 0px;\n  transition: font-size 0.5s;\n}\n\n.footer {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n\nform {\n  background-color: white;\n  position: fixed;\n  width: min(500px, 50vw);\n  height: min(500px, 100vh);\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 24px;\n  border-radius: 24px;\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto 1fr;\n  align-items: start;\n}\n\n.main-form-content {\n  padding-left: 24px;\n  padding-top: 24px;\n}\n\nform label, form input, form button {\n  color: black;\n  display: block;\n}\n\n.checkbox {\n  display: flex;\n  gap: 8px;\n  justify-content: start;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\nlabel:not(label[for='read']) {\n  margin-bottom: 8px;\n}\n\ninput:not(#read) {\n  width: calc(100% - 36px);\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 16px;\n  margin-bottom: 16px;\n  font-size: 1rem;\n}\n\n#close-form-btn {\n  display: block;\n  font-weight: bold;\n  background-color: transparent;\n  font-size: 1.5rem;\n  border: none;\n}\n\n#submit-btn {\n  align-self: center;\n  justify-self: center;\n  grid-column: 1 / -1;\n  padding: 12px 32px;\n  font-size: 1rem;\n  font-weight: bold;\n  background-color: transparent;\n  border: 2px solid black;\n  border-radius: 32px;\n  transition: background-color 1s, color 1s;\n}\n\n#submit-btn:hover {\n  background-color: black;\n  color: white;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,yDAAiD;EACjD;AACF;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,aAAa;EACb,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,oCAAoC;EACpC,8CAA8C;EAC9C,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,iBAAiB;EACjB,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,yCAAyC;AAC3C;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,eAAe;EACf,SAAS;EACT,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,4BAA4B;EAC5B,wBAAwB;EACxB,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,6BAA6B;EAC7B,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,6BAA6B;EAC7B,kBAAkB;EAClB,YAAY;EACZ,kBAAkB;EAClB,UAAU;EACV,QAAQ;EACR,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,uBAAuB;EACvB,eAAe;EACf,uBAAuB;EACvB,yBAAyB;EACzB,SAAS;EACT,QAAQ;EACR,gCAAgC;EAChC,aAAa;EACb,mBAAmB;EACnB,+BAA+B;EAC/B,4BAA4B;EAC5B,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,sBAAsB;EACtB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,6BAA6B;EAC7B,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,6BAA6B;EAC7B,uBAAuB;EACvB,mBAAmB;EACnB,yCAAyC;AAC3C;;AAEA;EACE,uBAAuB;EACvB,YAAY;AACd",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  color: white;\n  text-decoration: none;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nbody {\n  background-image: url('./assets/background.jpeg');\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\n}\n\n.bottom-layer {\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\n.header {\n  padding: 24px;\n  background-color: rgba(0, 0, 0, 0.5);\n  font-family: 'Courier New', Courier, monospace;\n  letter-spacing: 2px;\n  font-size: 1.5rem;\n}\n\n.content {\n  height: 100%;\n  padding: 24px;\n}\n\n#add-book-btn {\n  background-color: transparent;\n  padding: 8px 16px;\n  border: 1px white solid;\n  margin-bottom: 24px;\n  font-size: 1rem;\n  transition: background-color 1s, color 1s;\n}\n\n#add-book-btn:hover {\n  background-color: white;\n  color: black;\n}\n\n.card-container {\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 48px;\n  width: auto;\n}\n\n.book-card {\n  width: 250px;\n  height: 250px;\n  padding: 16px 32px 16px 16px;\n  border: 4px double white;\n  background: rgba(0, 0, 0, 0.5);\n  position: relative;\n}\n\n.book-card p:first-of-type {\n  font-weight: bold;\n  font-size: 1.25rem;\n  margin-bottom: 16px;\n}\n\n.book-card p:nth-child(2), .book-card p:nth-child(3) {\n  font-style: italic;\n  text-align: right;\n}\n\n.book-card button:first-of-type {\n  width: 75px;\n  padding: 4px 8px;\n  border: 1px solid white;\n  border-radius: 16px;\n  background-color: transparent;\n  margin-top: 16px;\n  display: block;\n  position: absolute;\n  bottom: 16px;\n  left: 16px;\n}\n\n.book-card button:first-of-type.read {\n  background-color: white;\n  color: black;\n}\n\n.book-card button:last-child {\n  display: block;\n  font-weight: bold;\n  background-color: transparent;\n  font-size: 1.25rem;\n  border: none;\n  position: absolute;\n  right: 8px;\n  top: 0px;\n  transition: font-size 0.5s;\n}\n\n.footer {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n\nform {\n  background-color: white;\n  position: fixed;\n  width: min(500px, 50vw);\n  height: min(500px, 100vh);\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 24px;\n  border-radius: 24px;\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto 1fr;\n  align-items: start;\n}\n\n.main-form-content {\n  padding-left: 24px;\n  padding-top: 24px;\n}\n\nform label, form input, form button {\n  color: black;\n  display: block;\n}\n\n.checkbox {\n  display: flex;\n  gap: 8px;\n  justify-content: start;\n  align-items: center;\n  margin-bottom: 16px;\n}\n\nlabel:not(label[for='read']) {\n  margin-bottom: 8px;\n}\n\ninput:not(#read) {\n  width: calc(100% - 36px);\n  padding: 8px;\n  border: 1px solid black;\n  border-radius: 16px;\n  margin-bottom: 16px;\n  font-size: 1rem;\n}\n\n#close-form-btn {\n  display: block;\n  font-weight: bold;\n  background-color: transparent;\n  font-size: 1.5rem;\n  border: none;\n}\n\n#submit-btn {\n  align-self: center;\n  justify-self: center;\n  grid-column: 1 / -1;\n  padding: 12px 32px;\n  font-size: 1rem;\n  font-weight: bold;\n  background-color: transparent;\n  border: 2px solid black;\n  border-radius: 32px;\n  transition: background-color 1s, color 1s;\n}\n\n#submit-btn:hover {\n  background-color: black;\n  color: white;\n}"],sourceRoot:""}]);const p=c},645:n=>{"use strict";n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},667:n=>{"use strict";n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{"use strict";var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],d=o.base?A[0]+o.base:A[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var p=e(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var b=r(u,o);o.byIndex=s,t.splice(s,0,{identifier:l,updater:b,references:1})}a.push(l)}return a}function r(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=e(i[a]);t[s].references--}for(var A=o(n,r),d=0;d<i.length;d++){var c=e(i[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}i=A}}},569:n=>{"use strict";var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{"use strict";n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{"use strict";n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{"use strict";n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{"use strict";n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},104:n=>{var t="undefined"!=typeof process&&process.pid?process.pid.toString(36):"";function e(){var n=Date.now(),t=e.last||n;return e.last=n>t?n:t+1}n.exports=n.exports.default=function(n,o){return(n||"")+""+t+e().toString(36)+(o||"")},n.exports.process=function(n,o){return(n||"")+t+e().toString(36)+(o||"")},n.exports.time=function(n,t){return(n||"")+e().toString(36)+(t||"")}},581:(n,t,e)=>{"use strict";n.exports=e.p+"assets/background-f4e7c09423524722ecd2.jpeg"}},t={};function e(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return n[o](i,i.exports,e),i.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{"use strict";var n=e(104),t=e.n(n);const o=class{constructor(n,e,o,r){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.title=n,this.author=e,this.year=o,this.pages=r,this.isRead=i,this.id=t()()}};var r=e(379),i=e.n(r),a=e(795),s=e.n(a),A=e(569),d=e.n(A),c=e(565),l=e.n(c),p=e(216),u=e.n(p),b=e(589),B=e.n(b),m=e(426),h={};h.styleTagTransform=B(),h.setAttributes=l(),h.insert=d().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),i()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals,(new class{constructor(){this.library=new class{constructor(){this.books=[],this.books.push(new o("Ducks: And How To Make Them Pay","William Cook",1894,188,!0),new o("How to Teach Quantum Physics to your Dog","Chad Orzel",2010,256,!0),new o("Raccoons Are The Brightest People","Sterling North",1966,192,!1))}addBook(n){const t=new o(n.title,n.author,n.year,n.pages,n.isRead);return this.books.push(t),t}removeBook(n){const t=this.books.findIndex((t=>t.id===n));this.books.splice(t,1)}updateReadStatus(n){const t=this.books.find((t=>t.id===n));t.isRead=!t.isRead}},this.ui=new class{constructor(){this.libraryContainer=document.querySelector(".card-container"),this.addBookButton=document.getElementById("add-book-btn"),this.bookForm=document.forms.bookForm,this.submitButton=document.querySelector("button#submit-btn"),this.closeFormButton=document.getElementById("close-form-btn"),this.bottomLayer=document.querySelector(".bottom-layer")}createBookCard(n){const t=document.createElement("div");t.classList.add("book-card");const e=n.id;let o;t.setAttribute("data-id",e);n:for(const r in n){switch(o=document.createElement("p"),r){case"isRead":o=document.createElement("button"),o.className="read-btn",o.setAttribute("data-id",e),n.isRead&&o.classList.add("read"),o.textContent=n.isRead?"Read":"Unread";break;case"author":o.textContent=`by ${n[r]}${n.year?", "+n.year:""}`;break;case"year":continue n;case"pages":n[r]&&(o.textContent=`${n[r]} page${1===n[r]?"":"s"}`);break;case"title":o.textContent=n[r]}t.appendChild(o)}const r=document.createElement("button");return r.className="delete-btn",r.textContent="x",r.setAttribute("data-id",e),t.appendChild(r),t}displayBooks(n){this.libraryContainer.innerHTML="";for(let t of n.books){let e=this.createBookCard(t);this.libraryContainer.appendChild(e),this.bindReadButton(n.updateReadStatus.bind(n),t.id,n),this.bindDeleteButton(n.removeBook.bind(n),t.id,n)}}bindAddBookButton(){this.addBookButton.addEventListener("click",(()=>{this.updateRequiredAttr(this.bookForm),this.bookForm.style.display="grid",this.bottomLayer.style.filter="brightness(50%)"}))}bindSubmitButton(n,t){this.submitButton.addEventListener("click",(()=>{if(this.validateForm(this.bookForm)){const e={title:this.bookForm.title.value,author:this.bookForm.author.value,year:Number(this.bookForm.year.value),pages:Number(this.bookForm.pages.value),isRead:this.bookForm.read.checked},o=n(e),r=this.createBookCard(o);this.libraryContainer.appendChild(r),this.hideForm(this.bookForm),this.displayBooks(t)}}))}bindReadButton(n,t,e){this.libraryContainer.querySelector(`.read-btn[data-id="${t}"]`).addEventListener("click",(o=>{n(t),this.displayBooks(e)}))}bindDeleteButton(n,t,e){this.libraryContainer.querySelector(`.delete-btn[data-id="${t}"]`).addEventListener("click",(()=>{n(t),this.displayBooks(e)}))}bindCloseFormButton(){this.closeFormButton.addEventListener("click",(()=>{this.hideForm(this.bookForm)}))}validateForm(n){for(const t of n.getElementsByTagName("input"))if(!t.checkValidity())return!1;return!0}hideForm(n){n.reset(),this.updateRequiredAttr(n),n.style.display="none",this.bottomLayer.style.filter="brightness(100%)"}updateRequiredAttr(n){for(const t of n.getElementsByTagName("input"))"read"!=t.id&&(t.getAttribute("required")?t.removeAttribute("required"):t.setAttribute("required","true"))}}}init(){this.ui.displayBooks(this.library),this.ui.bindAddBookButton(),this.ui.bindSubmitButton(this.library.addBook.bind(this.library),this.library)}}).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,